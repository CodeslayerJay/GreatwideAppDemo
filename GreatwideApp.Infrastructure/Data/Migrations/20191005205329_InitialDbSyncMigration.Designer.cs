// <auto-generated />
using System;
using GreatwideApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GreatwideApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191005205329_InitialDbSyncMigration")]
    partial class InitialDbSyncMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GreatwideApp.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .HasMaxLength(2);

                    b.Property<string>("Color")
                        .HasMaxLength(15);

                    b.Property<int>("DaysToManufacture");

                    b.Property<DateTime?>("DiscontinuedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("FinishedGoodsFlag")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("money");

                    b.Property<bool>("MakeFlag")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ProductLine")
                        .HasMaxLength(2);

                    b.Property<int?>("ProductModelId")
                        .HasColumnName("ProductModelID");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<short>("ReorderPoint");

                    b.Property<Guid>("Rowguid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("SafetyStockLevel");

                    b.Property<DateTime?>("SellEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SellStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Size")
                        .HasMaxLength(5);

                    b.Property<string>("SizeUnitMeasureCode")
                        .HasMaxLength(3);

                    b.Property<decimal>("StandardCost")
                        .HasColumnType("money");

                    b.Property<string>("Style")
                        .HasMaxLength(2);

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("WeightUnitMeasureCode")
                        .HasMaxLength(3);

                    b.HasKey("ProductId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("AK_Product_Name");

                    b.HasIndex("ProductModelId");

                    b.HasIndex("ProductNumber")
                        .IsUnique()
                        .HasName("AK_Product_ProductNumber");

                    b.HasIndex("Rowguid")
                        .IsUnique()
                        .HasName("AK_Product_rowguid");

                    b.ToTable("Product","Production");
                });

            modelBuilder.Entity("GreatwideApp.Domain.Entities.ProductModel", b =>
                {
                    b.Property<int>("ProductModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductModelID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatalogDescription")
                        .HasColumnType("xml");

                    b.Property<string>("Instructions")
                        .HasColumnType("xml");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("Rowguid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("ProductModelId");

                    b.HasIndex("CatalogDescription")
                        .HasName("PXML_ProductModel_CatalogDescription");

                    b.HasIndex("Instructions")
                        .HasName("PXML_ProductModel_Instructions");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("AK_ProductModel_Name");

                    b.HasIndex("Rowguid")
                        .IsUnique()
                        .HasName("AK_ProductModel_rowguid");

                    b.ToTable("ProductModel","Production");
                });

            modelBuilder.Entity("GreatwideApp.Domain.Entities.ProductReview", b =>
                {
                    b.Property<int>("ProductReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductReviewID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(3850);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID");

                    b.Property<int>("Rating");

                    b.Property<DateTime>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ProductReviewId");

                    b.HasIndex("ProductId");

                    b.HasIndex("Comments", "ProductId", "ReviewerName")
                        .HasName("IX_ProductReview_ProductID_Name");

                    b.ToTable("ProductReview","Production");
                });

            modelBuilder.Entity("GreatwideApp.Domain.Entities.Product", b =>
                {
                    b.HasOne("GreatwideApp.Domain.Entities.ProductModel", "ProductModel")
                        .WithMany("Products")
                        .HasForeignKey("ProductModelId");
                });

            modelBuilder.Entity("GreatwideApp.Domain.Entities.ProductReview", b =>
                {
                    b.HasOne("GreatwideApp.Domain.Entities.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
